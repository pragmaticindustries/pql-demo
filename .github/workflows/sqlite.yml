#name: Sqlite
#on:
#  workflow_call:
#jobs:
#  # Label of the container job
#  container-job:
#    # Containers must run in Linux based operating systems
#    runs-on: ubuntu-latest
#    # Docker Hub image that `container-job` executes in
##    container: node:10.18-jessie
#    # Service containers to run with `container-job`
#    services:
#      # Label used to access the service container
#      sqlite:
#        # Docker Hub image
#        image: keinos/sqlite3
#        # Provide the password for postgres
##        env:
##          POSTGRES_PASSWORD: postgres
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - name: checkout repo content
#        uses: actions/checkout@v2 # checkout the repository content to github runner.
#      - name: setup python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8 #install the python needed
#      - name: execute py script # run the run.py to get the latest data
#        run: |
#          python database_classes.py

#      - name: Connect to PostgreSQL
#        # Runs a script that creates a PostgreSQL table, populates
#        # the table with data, and then retrieves the data.
#        run: node client.js
#        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
#        env:
#          # The hostname used to communicate with the PostgreSQL service container
#          POSTGRES_HOST: postgres
#          # The default PostgreSQL port
#          POSTGRES_PORT: 5432